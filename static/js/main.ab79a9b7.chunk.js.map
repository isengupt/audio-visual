{"version":3,"sources":["components/title/Title.js","components/title/shader.js","shaders/title/fragment.js","shaders/title/vertex.js","img/img1.jpg","Scene.js","components/paste/Paste.js","slideData.js","Slider.js","components/paste/shader.js","Fall.js","App.js","reportWebVitals.js","index.js"],"names":["shaderMaterial","uniforms","time","type","value","resolution","THREE","uvRate1","level","playhead","black","side","transparent","vertexShader","fragmentShader","fragment","vertex","nums","mat1s","mat0s","i","console","log","m0","Object","assign","m1","push","Title","props","mesh0Ref","useRef","mesh1Ref","planeRef","radiansX","Math","PI","radiansY","radiansZ","useFrame","clock","Array","from","map","_","current","material","elapsedTime","rotation","scale","ref","position","attach","args","wireframe","image","load","img1","colors","require","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","controls","state","update","Scene","viewport","aspect","style","height","width","fov","near","far","antialias","onCreated","physicallyCorrectLights","outputEncoding","setClearColor","slideData","index","headline","button","src","Slide","handleMouseMove","bind","handleMouseLeave","handleSlideClick","imageLoaded","slide","React","createRef","event","el","this","r","getBoundingClientRect","setProperty","clientX","left","floor","clientY","top","target","opacity","classNames","className","onClick","onMouseMove","onMouseLeave","alt","onLoad","Component","SliderControl","title","handleClick","viewBox","d","Slider","handlePreviousClick","handleNextClick","previous","setState","slides","length","next","direction","heading","headingId","replace","toLowerCase","wrapperTransform","aria-labelledby","id","class","extensions","derivatives","blending","depthWrite","depthTest","count","Float32Array","j","set","Paste","mesh","attachObject","App","href","Fall","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yIAWA,I,0ECgDiBA,EAzDI,CACjBC,SAAU,CACRC,KAAM,CAAEC,KAAM,IAAKC,MAAO,GAC1BC,WAAY,CAACF,KAAM,KAAMC,MAAO,IAAIE,WACpCC,QAAS,CACPH,MAAO,IAAIE,UAAc,EAAE,IAE7BE,MAAO,CACLL,KAAM,IAAKC,MAAO,GAEpBK,SAAU,CACRN,KAAM,IAAKC,MAAO,GAEpBM,MAAO,CACLP,KAAM,IAAKC,MAAO,IAGtBO,KAAML,aACRM,aAAa,EACXC,aAAa,wMASbC,eAAe,4qBC9BRC,EAAQ,isMCARC,EAAM,0JCAF,MAA0B,iCJOrCC,EAAO,GACPC,EAAQ,GACRC,EAAQ,GAEHC,EAAI,EAAGA,GAAKH,EAAMG,IAAK,CAC9B,IAAIZ,EAAQY,EAAIH,EAChBI,QAAQC,IAAId,GACZ,IAAIe,EAAKC,OAAOC,OAAO,GAAIzB,GACvB0B,EAAKF,OAAOC,OAAO,GAAIzB,GAC3BuB,EAAGtB,SAASS,MAAMN,MAAQ,EAC1BsB,EAAGzB,SAASS,MAAMN,MAAQ,EAC1BmB,EAAGtB,SAASO,MAAMJ,MAAQI,EAC1BkB,EAAGzB,SAASO,MAAMJ,MAAQI,EAE1BU,EAAMS,KAAKD,GACXP,EAAMQ,KAAKJ,GA0IEK,MAvIf,SAAeC,GAEb,IAAIC,EAAWC,iBAAO,IAClBC,EAAWD,iBAAO,IAClBE,EAAWF,mBAGTG,EAAWC,KAAKC,GAAK,EACrBC,EAAY,EAAIF,KAAKC,GAAM,IAC3BE,EAAY,EAAIH,KAAKC,GAAM,IAWjC,OATAG,aAAS,YAAgB,IAAbC,EAAY,EAAZA,MAGVC,MAAMC,KAAK,IAAID,MAAM,KAAKE,KAAI,SAACC,EAAGxB,GAChCU,EAASe,QAAQzB,GAAG0B,SAAS7C,SAASC,KAAKE,MAAQoC,EAAMO,YACzDf,EAASa,QAAQzB,GAAG0B,SAAS7C,SAASC,KAAKE,MAAQoC,EAAMO,kBAK3D,mCACE,kDAAWlB,GAAX,IACEmB,SAAU,CAACd,EAAUG,EAAUC,GAC/BW,MAAO,CAAC,EAAE,EAAE,GAFd,UAIGR,MAAMC,KAAK,IAAID,MAAM,KAAKE,KAAI,SAACC,EAAGxB,GAAJ,OAC7B,uBACER,aAAa,EACbsC,IAAK,SAACA,GAAD,OAAUpB,EAASe,QAAQzB,GAAK8B,GACrCF,SAAU,CAACd,EAAUG,EAAUC,GAE/Ba,SAAU,CAAC,EAAG/B,EAAIH,EAAM,GAL1B,UAOE,qCAAqBmC,OAAO,WAAWC,KAAM,CAAC,EAAG,KAGjD,gCACED,OAAO,WACPxC,aAAa,EACb0C,WAAW,EACXD,KAAM,CACJ,CACEpD,SAAU,CACRC,KAAM,CAAEC,KAAM,IAAKC,MAAO,GAC1BC,WAAY,CAAEF,KAAM,KAAMC,MAAO,IAAIE,WACrCC,QAAS,CACPH,MAAO,IAAIE,UAAc,EAAG,IAE9BE,MAAO,CACLL,KAAM,IACNC,MAAOgB,EAAIH,GAEbsC,MAAO,CAAEpD,KAAM,IAAKC,OAAO,IAAIE,iBAAsBkD,KAAKC,IAC1DhD,SAAU,CACRN,KAAM,IACNC,MAAO,GAETM,MAAO,CACLP,KAAM,IACNC,MAAO,IAGXO,KAAML,aACNM,aAAa,EACbC,aAAcG,EACdF,eAAgBC,QAnCjBK,MA0CRqB,MAAMC,KAAK,IAAID,MAAM,KAAKE,KAAI,SAACC,EAAGxB,GAAJ,OAC7B,uBACER,aAAa,EACbsC,IAAK,SAACA,GAAD,OAAUlB,EAASa,QAAQzB,GAAK8B,GACrCF,SAAU,CAACd,EAAUG,EAAUC,GAE/Ba,SAAU,CAAC,EAAG/B,EAAIH,EAAO,KAAO,GALlC,UAOE,qCAAqBmC,OAAO,WAAWC,KAAM,CAAC,EAAG,KAGjD,gCACED,OAAO,WACPxC,aAAa,EACb0C,WAAW,EACXD,KAAM,CACJ,CACEpD,SAAU,CACRC,KAAM,CAAEC,KAAM,IAAKC,MAAO,GAC1BC,WAAY,CAAEF,KAAM,KAAMC,MAAO,IAAIE,WACrCC,QAAS,CACPH,MAAO,IAAIE,UAAc,EAAG,IAE9BE,MAAO,CACLL,KAAM,IACNC,MAAOgB,EAAIH,GAEbsC,MAAO,CAAEpD,KAAM,IAAKC,OAAO,IAAIE,iBAAsBkD,KAAKC,IAC1DhD,SAAU,CACRN,KAAM,IACNC,MAAO,GAETM,MAAO,CACLP,KAAM,IACNC,MAAO,IAGXO,KAAML,aACNM,aAAa,EACbC,aAAcG,EACdF,eAAgBC,QAnCjBK,MA0CT,uBAAM8B,IAAKjB,EAEDe,SAAU,CAACd,EAAUG,EAAUC,GAFzC,UAKE,qCAAqBc,OAAO,WAAWC,KAAM,CAAC,EAAG,KAGjD,gCAAgBD,OAAO,WAAWC,KAAM,CAACrD,eKhJ/C0D,EAASC,EAAQ,IAErBC,YAAO,CAAEC,oBACKH,EAAO,IAArB,IACMI,EAAiB,WAAO,IAAD,EAIvBC,cAFFC,EAFyB,EAEzBA,OACMC,EAHmB,EAGzBC,GAAMD,WAGFE,EAAWpC,mBAEjB,OADAQ,aAAS,SAAC6B,GAAD,OAAWD,EAAStB,QAAQwB,YAC9B,+BAAenB,IAAKiB,EAAUd,KAAM,CAACW,EAAQC,MCZtD,IDoDA,IAQeK,EA7Cf,WAAkB,IAAD,EACcP,cAC7B,OAFe,EACPQ,SADO,EACGC,OAEhB,qBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SAAtC,SACE,eAAC,IAAD,CACEX,OAAQ,CACNY,IAAK,GAELC,KAAM,KACNC,IAAK,IAEL3B,SAAU,CAAC,EAAG,EAAG,KAEnBe,GAAI,CACFa,WAAW,GAIbC,UAAW,YAAqB,IAAlBd,EAAiB,EAAjBA,GAAiB,EAAbF,OAChBE,EAAGe,yBAA0B,EAC7Bf,EAAGgB,eAAiB5E,eAEpB4D,EAAGiB,cAAc,YAlBrB,UAqBE,cAAC,EAAD,CAAOhC,SAAU,CAAC,EAAG,EAAG,KACxB,cAAC,EAAD,UElDKiC,EAAY,CACrB,CACEC,MAAO,EACPC,SAAU,sBACVC,OAAQ,WACRC,IAAK,mEAEP,CACEH,MAAO,EACPC,SAAU,oBACVC,OAAQ,cACRC,IAAK,kEAEP,CACEH,MAAO,EACPC,SAAU,wBACVC,OAAQ,SACRC,IAAK,kEAEP,CACEH,MAAO,EACPC,SAAU,uBACVC,OAAQ,cACRC,IAAK,uE,2CCrBLC,E,kDACF,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IAED6D,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,MAAQC,IAAMC,YAPF,E,4DAUHC,GACd,IAAMC,EAAKC,KAAKL,MAAMlD,QAChBwD,EAAIF,EAAGG,wBAEbH,EAAG1B,MAAM8B,YAAY,MAAOL,EAAMM,SAAWH,EAAEI,KAAOtE,KAAKuE,MAAML,EAAE1B,MAAQ,KAC3EwB,EAAG1B,MAAM8B,YAAY,MAAOL,EAAMS,SAAWN,EAAEO,IAAMzE,KAAKuE,MAAML,EAAE3B,OAAS,O,uCAG5DwB,GACfE,KAAKL,MAAMlD,QAAQ4B,MAAM8B,YAAY,MAAO,GAC5CH,KAAKL,MAAMlD,QAAQ4B,MAAM8B,YAAY,MAAO,K,uCAG7BL,GACfE,KAAKvE,MAAMgE,iBAAiBO,KAAKvE,MAAMkE,MAAMV,S,kCAGnCa,GACVA,EAAMW,OAAOpC,MAAMqC,QAAU,I,+BAGrB,IAAD,EACkCV,KAAKvE,MAAMkE,MAA5CP,EADD,EACCA,IAAaF,GADd,EACMC,OADN,EACcD,UAAUD,EADxB,EACwBA,MACzBxC,EAAUuD,KAAKvE,MAAMgB,QACvBkE,EAAa,QAMjB,OAJIlE,IAAYwC,EAAO0B,GAAc,kBAC5BlE,EAAU,IAAMwC,EAAO0B,GAAc,mBACrClE,EAAU,IAAMwC,IAAO0B,GAAc,gBAG5C,oBACE7D,IAAKkD,KAAKL,MACViB,UAAWD,EACXE,QAASb,KAAKP,iBACdqB,YAAad,KAAKV,gBAClByB,aAAcf,KAAKR,iBALrB,SAOE,qBAAKoB,UAAU,uBAAf,SACE,qBACEA,UAAU,eACVI,IAAK9B,EACLE,IAAKA,EACL6B,OAAQjB,KAAKN,sB,GAtDPE,IAAMsB,WAqElBC,EAAgB,SAAC,GAAkC,IAAhCpH,EAA+B,EAA/BA,KAAMqH,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACpC,OACE,wBAAQT,UAAS,mBAAc7G,GAAQqH,MAAOA,EAAOP,QAASQ,EAA9D,SACE,qBAAKT,UAAU,OAAOU,QAAQ,YAA9B,SACE,sBAAMC,EAAE,qEA8FDC,E,kDAlFb,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IAEDuC,MAAQ,CAAEvB,QAAS,GACxB,EAAKgF,oBAAsB,EAAKA,oBAAoBlC,KAAzB,gBAC3B,EAAKmC,gBAAkB,EAAKA,gBAAgBnC,KAArB,gBACvB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBANP,E,kEAUjB,IAAMoC,EAAW3B,KAAKhC,MAAMvB,QAAU,EAEtCuD,KAAK4B,SAAS,CACZnF,QAAUkF,EAAW,EACjB3B,KAAKvE,MAAMoG,OAAOC,OAAS,EAC3BH,M,wCAKN,IAAMI,EAAO/B,KAAKhC,MAAMvB,QAAU,EAElCuD,KAAK4B,SAAS,CACZnF,QAAUsF,IAAS/B,KAAKvE,MAAMoG,OAAOC,OACjC,EACAC,M,uCAIS9C,GACXe,KAAKhC,MAAMvB,UAAYwC,GACzBe,KAAK4B,SAAS,CACZnF,QAASwC,M,+BAKL,IAAD,SACwBe,KAAKhC,MAA5BvB,EADD,EACCA,QADD,KACUuF,UACWhC,KAAKvE,OAAzBoG,EAFD,EAECA,OAAQI,EAFT,EAESA,QACVC,EAAS,0BAAsBD,EAAQE,QAAQ,OAAQ,KAAKC,eAC5DC,EAAmB,CACvB,UAAY,eAAZ,OAA4B5F,GAAW,IAAMoF,EAAOC,QAApD,OAGF,OACE,sBAAKlB,UAAU,SAAS0B,kBAAiBJ,EAAzC,UACE,qBAAItB,UAAU,kBAAkBvC,MAAOgE,EAAvC,UACE,oBAAIE,GAAIL,EAAWM,MAAM,iBAAzB,SAA2CP,IAE1CJ,EAAOtF,KAAI,SAAAoD,GACV,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPlD,QAASA,EACTgD,iBAAkB,EAAKA,kBAHlBE,EAAMV,aASnB,sBAAK2B,UAAU,oBAAf,UACE,cAAC,EAAD,CACE7G,KAAK,WACLqH,MAAM,uBACNC,YAAarB,KAAKyB,sBAKpB,cAAC,EAAD,CACE1H,KAAK,OACLqH,MAAM,mBACNC,YAAarB,KAAK0B,4B,GA3ET9B,IAAMsB,WCgIdtH,EAjNQ,CACrBC,SAAU,CACRC,KAAM,CAAEC,KAAM,IAAKC,MAAO,GAE1BC,WAAY,CAAEF,KAAM,KAAMC,MAAO,IAAIE,WACrCC,QAAS,CACPH,MAAO,IAAIE,UAAc,EAAG,KAGhCuI,WAAY,CACVC,YAAa,mDAEfnI,KAAML,aACNM,aAAa,EACbmI,SAAUzI,mBACV0I,YAAY,EACZC,WAAW,EACXpI,aAAa,mtMA8KbC,eAAe,sbH/LboI,EAAQ,IAER/F,EAAW,IAAIgG,aAAaD,MAEvB9H,EAAI,EAAGA,EAAI8H,EAAO9H,IACzB,IAAK,IAAIgI,EAAI,EAAGA,EAAIF,EAAOE,IASxBjG,EAASkG,IAAI,CACI,IAAfjI,EAAE8H,EAAQ,IACK,IAAfE,EAAEF,EAAQ,IACX,GACA,GAAGA,EAAM9H,EAAEgI,IAqCFE,MAhCf,SAAezH,GAEb,IAAM0H,EAAOxH,mBAEbQ,aAAS,YAAgB,IAAbC,EAAY,EAAZA,MACV+G,EAAK1G,QAAQC,SAAS7C,SAASC,KAAKE,MAAQoC,EAAMO,eAGpD,IAAMb,EAAW,EAAIC,KAAKC,GAAK,EACzBC,EAAY,IAAMF,KAAKC,GAAM,IAC7BE,EAAY,GAAKH,KAAKC,GAAM,IAElC,OACE,mDAAYP,GAAZ,IAAmBqB,IAAKqG,EACtBvG,SAAU,CAACd,EAAUG,EAAUC,GADjC,UAGE,gCAAgBc,OAAO,WACrBJ,SAAU,CAACd,EAAUG,EAAUC,GADjC,SAIE,iCACEkH,aAAc,CAAC,aAAc,YAC7BnG,KAAM,CAACF,EAAU,OAGrB,gCAAgBC,OAAO,WAEvBC,KAAM,CAACrD,UI9CT0D,EAASC,EAAQ,IAErBC,YAAO,CAAEC,oBACKH,EAAO,IAArB,IACMI,EAAiB,WAAO,IAAD,EAIvBC,cAFFC,EAFyB,EAEzBA,OACMC,EAHmB,EAGzBC,GAAMD,WAGFE,EAAWpC,mBAEjB,OADAQ,aAAS,SAAC6B,GAAD,OAAWD,EAAStB,QAAQwB,YAC9B,+BAAenB,IAAKiB,EAAUd,KAAM,CAACW,EAAQC,MAoCtD,IAQeK,EAzCf,WAAkB,IAAD,EACcP,cAC7B,OAFe,EACPQ,SADO,EACGC,OAEhB,qBAAKC,MAAO,CAAEC,OAAQ,QAAtB,SACE,eAAC,IAAD,CACEV,OAAQ,CACNY,IAAK,GAELC,KAAM,KACNC,IAAK,IAEL3B,SAAU,CAAC,EAAG,EAAG,IAEnBe,GAAI,CACFa,WAAW,GAIbC,UAAW,YAAqB,IAAlBd,EAAiB,EAAjBA,GAAiB,EAAbF,OAChBE,EAAGe,yBAA0B,EAC7Bf,EAAGgB,eAAiB5E,eAEpB4D,EAAGiB,cAAc,YAlBrB,UAqBE,cAAC,EAAD,CAAOhC,SAAU,CAAC,EAAG,EAAG,KACxB,cAAC,EAAD,UC3CO,SAASsG,IACtB,OAEE,qCACE,sBAAKzC,UAAU,QAAf,UACE,oBAAIA,UAAU,eAAd,iCACA,qBAAKA,UAAU,iBACf,sBAAKA,UAAU,aAAf,UACE,mBACEA,UAAU,cACV0C,KAAK,0CAFP,sBAMA,mBAAG1C,UAAU,cAAc0C,KAAK,IAAhC,oBAGA,mBACE1C,UAAU,cACV0C,KAAK,4CAFP,0BAQJ,qBAAK1C,UAAU,kBAAf,SACA,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,qBAAKA,UAAU,sBAAf,oBACA,qBAAKA,UAAU,uBAAf,yBAGJ,cAAC,EAAD,IACA,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,qBAAKA,UAAU,uBAAf,sBACA,qBAAKA,UAAU,8BAAf,8BAKN,qBAAKA,UAAU,oCAAf,SACE,cAAC2C,EAAD,MAGF,qBAAK3C,UAAU,gCAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,0BACf,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,8BAAf,kCACuB,6CAEvB,qBAAKA,UAAU,+BAAf,2BAEA,qBAAKA,UAAU,oCAAf,8TAQA,qBAAKA,UAAU,+BAAf,SACE,cAAC,EAAD,CAAQqB,QAAQ,iBAAiBJ,OAAQ7C,cAOjD,qBAAK4B,UAAU,kBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,0BAAf,0BAEF,qBAAKA,UAAU,2BAAf,SACE,qBAAK4B,MAAM,4BAAX,SACE,sBAAKA,MAAM,SAAX,UACE,qBAAKA,MAAM,eAAX,0CACA,qBAAKA,MAAM,eAAX,4FAIA,qBAAKA,MAAM,eAAX,6CAGA,sBAAKA,MAAM,eAAX,gEACsD,cAK5D,qBAAK5B,UAAU,0BAAf,SACE,qBAAKA,UAAU,kCCtG7B,IAYe4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab79a9b7.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport shaderMaterial from \"./shader\";\nimport { fragment } from \"../../shaders/title/fragment\";\nimport { vertex } from \"../../shaders/title/vertex\";\nimport img1 from '../../img/img1.jpg'\nlet nums = 20;\nlet mat1s = [];\nlet mat0s = [];\n\nfor (var i = 0; i <= nums; i++) {\n  let level = i / nums;\n  console.log(level);\n  let m0 = Object.assign({}, shaderMaterial);\n  let m1 = Object.assign({}, shaderMaterial);\n  m0.uniforms.black.value = 1;\n  m1.uniforms.black.value = 0;\n  m0.uniforms.level.value = level;\n  m1.uniforms.level.value = level;\n\n  mat1s.push(m1);\n  mat0s.push(m0);\n}\n\nfunction Title(props) {\n  // This reference will give us direct access to the mesh\n  let mesh0Ref = useRef({});\n  let mesh1Ref = useRef({});\n  let planeRef = useRef();\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  const radiansX = Math.PI / 2;\n  const radiansY = (0 * Math.PI) / 180;\n  const radiansZ = (0 * Math.PI) / 180;\n\n  useFrame(({ clock }) => {\n    //mesh0Ref.current.material.uniforms.time.value = clock.elapsedTime;\n\n    Array.from(new Array(20)).map((_, i) => {\n      mesh0Ref.current[i].material.uniforms.time.value = clock.elapsedTime;\n      mesh1Ref.current[i].material.uniforms.time.value = clock.elapsedTime;\n    });\n  });\n\n  return (\n    <>\n      <group {...props}\n        rotation={[radiansX, radiansY, radiansZ]}\n        scale={[2,2,2]}\n       >\n        {Array.from(new Array(20)).map((_, i) => (\n          <mesh\n            transparent={true}\n            ref={(ref) => (mesh0Ref.current[i] = ref)}\n            rotation={[radiansX, radiansY, radiansZ]}\n            key={i}\n            position={[0, i / nums, 0]}\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]}>\n              {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n            </planeBufferGeometry>\n            <shaderMaterial\n              attach=\"material\"\n              transparent={true}\n              wireframe={false}\n              args={[\n                {\n                  uniforms: {\n                    time: { type: \"f\", value: 0 },\n                    resolution: { type: \"v4\", value: new THREE.Vector4() },\n                    uvRate1: {\n                      value: new THREE.Vector2(1, 1),\n                    },\n                    level: {\n                      type: \"f\",\n                      value: i / nums,\n                    },\n                    image: { type: \"t\", value: new THREE.TextureLoader().load(img1) },\n                    playhead: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                    black: {\n                      type: \"f\",\n                      value: 1,\n                    },\n                  },\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  vertexShader: vertex,\n                  fragmentShader: fragment,\n                },\n              ]}\n            />\n          </mesh>\n        ))}\n\n        {Array.from(new Array(20)).map((_, i) => (\n          <mesh\n            transparent={true}\n            ref={(ref) => (mesh1Ref.current[i] = ref)}\n            rotation={[radiansX, radiansY, radiansZ]}\n            key={i}\n            position={[0, i / nums - 0.005, 0]}\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]}>\n              {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n            </planeBufferGeometry>\n            <shaderMaterial\n              attach=\"material\"\n              transparent={true}\n              wireframe={false}\n              args={[\n                {\n                  uniforms: {\n                    time: { type: \"f\", value: 0 },\n                    resolution: { type: \"v4\", value: new THREE.Vector4() },\n                    uvRate1: {\n                      value: new THREE.Vector2(1, 1),\n                    },\n                    level: {\n                      type: \"f\",\n                      value: i / nums,\n                    },\n                    image: { type: \"t\", value: new THREE.TextureLoader().load(img1) },\n                    playhead: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                    black: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                  },\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  vertexShader: vertex,\n                  fragmentShader: fragment,\n                },\n              ]}\n            />\n          </mesh>\n        ))}\n\n        <mesh ref={planeRef}\n       \n                  rotation={[radiansX, radiansY, radiansZ]}\n        \n         >\n          <planeBufferGeometry attach=\"geometry\" args={[6, 6]}>\n            {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n          </planeBufferGeometry>\n          <shaderMaterial attach=\"material\" args={[shaderMaterial]} />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nexport default Title;\n","import * as THREE from \"three\";\n\nvar shaderMaterial = {\n    uniforms: {\n      time: { type: 'f', value: 0 },\n      resolution: {type: 'v4', value: new THREE.Vector4()},\n      uvRate1: {\n        value: new THREE.Vector2(1,1)\n      },\n      level: {\n        type: 'f', value: 0\n      },\n      playhead: {\n        type: 'f', value: 0\n      },\n      black: {\n        type: 'f', value: 0\n      }\n    },\n    side: THREE.DoubleSide,\n  transparent: true,\n    vertexShader: `\n      uniform float time;\n      varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        \n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n      }\n    `,\n    fragmentShader: `\n\n\n    precision highp float;\n    uniform float time;\n    uniform float progress;\n    uniform float level;\n    uniform float playhead;\n \n    varying vec2 vUv;\n\n\n      void main() {\n        float w = 0.4;\n        float smoothness = 0.003;\n        float border = smoothstep(w,w + smoothness,vUv.x);\n        float border1 = smoothstep(w,w + smoothness,vUv.y);\n        float border2 = smoothstep(w,w + smoothness,1. - vUv.y);\n        float border3   = smoothstep(w,w + smoothness,1. - vUv.x);\n        border *= border1 * border2 * border3;\n       \n        if (border==1.) discard;\n        gl_FragColor = vec4(vec3(0.603, 0.564,0.470), border);\n\n\n      }\n    `\n  }\n  \n  export default shaderMaterial\n  ","export var fragment = `\n\n\nprecision highp float;\nuniform float time;\nuniform float progress;\nuniform float level;\nuniform float black;\nuniform float playhead;\nuniform sampler2D image;\nvarying vec2 vUv;\n\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec4 P){\nvec4 Pi0 = floor(P); // Integer part for indexing\nvec4 Pi1 = Pi0 + 1.0; // Integer part + 1\nPi0 = mod(Pi0, 289.0);\nPi1 = mod(Pi1, 289.0);\nvec4 Pf0 = fract(P); // Fractional part for interpolation\nvec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\nvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\nvec4 iy = vec4(Pi0.yy, Pi1.yy);\nvec4 iz0 = vec4(Pi0.zzzz);\nvec4 iz1 = vec4(Pi1.zzzz);\nvec4 iw0 = vec4(Pi0.wwww);\nvec4 iw1 = vec4(Pi1.wwww);\n\nvec4 ixy = permute(permute(ix) + iy);\nvec4 ixy0 = permute(ixy + iz0);\nvec4 ixy1 = permute(ixy + iz1);\nvec4 ixy00 = permute(ixy0 + iw0);\nvec4 ixy01 = permute(ixy0 + iw1);\nvec4 ixy10 = permute(ixy1 + iw0);\nvec4 ixy11 = permute(ixy1 + iw1);\n\nvec4 gx00 = ixy00 / 7.0;\nvec4 gy00 = floor(gx00) / 7.0;\nvec4 gz00 = floor(gy00) / 6.0;\ngx00 = fract(gx00) - 0.5;\ngy00 = fract(gy00) - 0.5;\ngz00 = fract(gz00) - 0.5;\nvec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\nvec4 sw00 = step(gw00, vec4(0.0));\ngx00 -= sw00 * (step(0.0, gx00) - 0.5);\ngy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\nvec4 gx01 = ixy01 / 7.0;\nvec4 gy01 = floor(gx01) / 7.0;\nvec4 gz01 = floor(gy01) / 6.0;\ngx01 = fract(gx01) - 0.5;\ngy01 = fract(gy01) - 0.5;\ngz01 = fract(gz01) - 0.5;\nvec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\nvec4 sw01 = step(gw01, vec4(0.0));\ngx01 -= sw01 * (step(0.0, gx01) - 0.5);\ngy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\nvec4 gx10 = ixy10 / 7.0;\nvec4 gy10 = floor(gx10) / 7.0;\nvec4 gz10 = floor(gy10) / 6.0;\ngx10 = fract(gx10) - 0.5;\ngy10 = fract(gy10) - 0.5;\ngz10 = fract(gz10) - 0.5;\nvec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\nvec4 sw10 = step(gw10, vec4(0.0));\ngx10 -= sw10 * (step(0.0, gx10) - 0.5);\ngy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\nvec4 gx11 = ixy11 / 7.0;\nvec4 gy11 = floor(gx11) / 7.0;\nvec4 gz11 = floor(gy11) / 6.0;\ngx11 = fract(gx11) - 0.5;\ngy11 = fract(gy11) - 0.5;\ngz11 = fract(gz11) - 0.5;\nvec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\nvec4 sw11 = step(gw11, vec4(0.0));\ngx11 -= sw11 * (step(0.0, gx11) - 0.5);\ngy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\nvec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\nvec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\nvec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\nvec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\nvec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\nvec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\nvec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\nvec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\nvec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\nvec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\nvec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\nvec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\nvec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\nvec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\nvec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\nvec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\nvec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\ng0000 *= norm00.x;\ng0100 *= norm00.y;\ng1000 *= norm00.z;\ng1100 *= norm00.w;\n\nvec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\ng0001 *= norm01.x;\ng0101 *= norm01.y;\ng1001 *= norm01.z;\ng1101 *= norm01.w;\n\nvec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\ng0010 *= norm10.x;\ng0110 *= norm10.y;\ng1010 *= norm10.z;\ng1110 *= norm10.w;\n\nvec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\ng0011 *= norm11.x;\ng0111 *= norm11.y;\ng1011 *= norm11.z;\ng1111 *= norm11.w;\n\nfloat n0000 = dot(g0000, Pf0);\nfloat n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\nfloat n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\nfloat n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\nfloat n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\nfloat n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\nfloat n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\nfloat n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\nfloat n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\nfloat n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\nfloat n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\nfloat n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\nfloat n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\nfloat n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\nfloat n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\nfloat n1111 = dot(g1111, Pf1);\n\nvec4 fade_xyzw = fade(Pf0);\nvec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\nvec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\nvec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\nvec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\nfloat n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\nreturn 2.2 * n_xyzw;\n\n\n}\n\nfloat aastep(float threshold, float value) {\n#ifdef GL_OES_standard_derivatives\nfloat afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\nreturn smoothstep(threshold-afwidth, threshold+afwidth, value);\n#else\nreturn step(threshold, value);\n#endif  \n}\n\n\n  void main() {\n    float w = 0.1;\n    float border = smoothstep(0.,w,vUv.x);\n    float border1 = smoothstep(0.,w,vUv.y);\n    float border2 = smoothstep(0.,w,1. - vUv.y);\n    float border3   = smoothstep(0.,w,1. - vUv.x);\n    border *= border1 * border2 * border3;\n    float noise = cnoise(vec4(vUv*10.,level + (-time) ,0.));\n    noise *=border;\n\n    noise = aastep(0.1 + level/3., noise);\n\n    if (noise==0.) discard;\n    gl_FragColor = vec4(vec3(level), 1.);\n\n\n\n    if (black > 0.5) {\n      gl_FragColor.rgb = vec3(0.);\n      if (level == 1.) {\n        discard;\n      } \n    }\n    vec4 color = texture2D(image, vUv);\n    if (level ==0.95) {\n      gl_FragColor = color;\n    }\n  }\n`\n\n;","export var vertex = `\nuniform float time;\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}\n`;","export default __webpack_public_path__ + \"static/media/img1.9c0be88e.jpg\";","import React, { useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport gsap from \"gsap\";\nimport { ChromaticAberration, EffectComposer } from \"react-postprocessing\";\nimport { Canvas, extend, useFrame, useThree } from \"react-three-fiber\";\n\n\nimport Title from \"./components/title/Title\";\nvar colors = require(\"nice-color-palettes\");\n\nextend({ OrbitControls });\nlet pallete = colors[96];\nconst CameraControls = () => {\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return <orbitControls ref={controls} args={[camera, domElement]} />;\n};\n\nfunction Scene() {\n  const { viewport, aspect } = useThree();\n  return (\n    <div style={{ height: \"300px\", width: \"300px\" }}>\n      <Canvas\n        camera={{\n          fov: 10,\n\n          near: 0.001,\n          far: 10000,\n\n          position: [0, 0, 15],\n        }}\n        gl={{\n          antialias: true,\n          // alpha:false,\n          //preserveDrawingBuffer: true,\n        }}\n        onCreated={({ gl, camera }) => {\n          gl.physicallyCorrectLights = true;\n          gl.outputEncoding = THREE.sRGBEncoding;\n         // gl.setClearColor(\"#000\");\n          gl.setClearColor(\"#181819\");\n        }}\n      >\n        <Title position={[0, 0, 0]} />\n        <CameraControls />\n        {/*   <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <EffectComposer>\n        <ChromaticAberration offset={[-0.001,0.008]}/> \n      </EffectComposer> */}\n      </Canvas>\n    </div>\n  );\n}\n\nconst getDevicePixelRatio = (maxDpr = 2) =>\n  typeof window !== \"undefined\"\n    ? Math.min(\n        Math.max(Math.round(window.devicePixelRatio), 1),\n        maxDpr\n      ).toFixed(1)\n    : \"1.0\";\n\nexport default Scene;\n","import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport shaderMaterial from \"./shader\";\n\nlet count = 500;\n\nlet position = new Float32Array(count * count * 3);\n\nfor (let i = 0; i < count; i++) {\n  for (let j = 0; j < count; j++) {\n   /*   let u = Math.random() * 2 * Math.PI;\n    let v = Math.random() * Math.PI;\n    let x = 6 * (0.9 + 0.2 * v) * Math.cos(u) * Math.sin(v);\n    let y = 6 * 1.5 * Math.cos(v);\n    let z = 6 * (0.9 + 0.2 * v) * Math.sin(u) * Math.sin(v);\n    \n    position.set([x, y, z], 3 * (count * i + j));\n    */\n     position.set([\n      (i/count - 0.5)*10,\n      (j/count - 0.5)*10,\n      0\n    ],3*(count*i+j)) \n    \n  }\n}\n\nfunction Paste(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(({ clock }) => {\n    mesh.current.material.uniforms.time.value = clock.elapsedTime;\n  });\n\n  const radiansX = 0 * Math.PI / 2;\n  const radiansY = (180 * Math.PI) / 180;\n  const radiansZ = (20 * Math.PI) / 180;\n\n  return (\n    <points {...props} ref={mesh}\n      rotation={[radiansX, radiansY, radiansZ]}\n    >\n      <bufferGeometry attach=\"geometry\"\n        rotation={[radiansX, radiansY, radiansZ]}\n      \n      >\n        <bufferAttribute\n          attachObject={[\"attributes\", \"position\"]}\n          args={[position, 3]}\n        />\n      </bufferGeometry>\n      <shaderMaterial attach=\"material\" \n       \n      args={[shaderMaterial]} />\n    </points>\n  );\n}\n\nexport default Paste;\n","export const slideData = [\n    {\n      index: 0,\n      headline: 'New Fashion Apparel',\n      button: 'Shop now',\n      src: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/225363/fashion.jpg'\n    },\n    {\n      index: 1,\n      headline: 'In The Wilderness',\n      button: 'Book travel',\n      src: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/225363/forest.jpg'\n    },\n    {\n      index: 2,\n      headline: 'For Your Current Mood',\n      button: 'Listen',\n      src: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/225363/guitar.jpg'\n    },\n    {\n      index: 3,\n      headline: 'Focus On The Writing',\n      button: 'Get Focused',\n      src: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/225363/typewriter.jpg'\n    }\n  ]","import React from \"react\";\n\nclass Slide extends React.Component {\n    constructor(props) {\n      super(props)\n  \n      this.handleMouseMove = this.handleMouseMove.bind(this)\n      this.handleMouseLeave = this.handleMouseLeave.bind(this)\n      this.handleSlideClick = this.handleSlideClick.bind(this)\n      this.imageLoaded = this.imageLoaded.bind(this)\n      this.slide = React.createRef()\n    }\n    \n    handleMouseMove(event) {\n      const el = this.slide.current\n      const r = el.getBoundingClientRect()\n  \n      el.style.setProperty('--x', event.clientX - (r.left + Math.floor(r.width / 2)))\n      el.style.setProperty('--y', event.clientY - (r.top + Math.floor(r.height / 2)))\n    }\n    \n    handleMouseLeave(event) {    \n      this.slide.current.style.setProperty('--x', 0)\n      this.slide.current.style.setProperty('--y', 0)\n    }\n    \n    handleSlideClick(event) {\n      this.props.handleSlideClick(this.props.slide.index)\n    }\n    \n    imageLoaded(event) {\n      event.target.style.opacity = 1\n    }\n    \n    render() {\n      const { src, button, headline, index } = this.props.slide\n      const current = this.props.current\n      let classNames = 'slide'\n      \n      if (current === index) classNames += ' slide--current'\n      else if (current - 1 === index) classNames += ' slide--previous'\n      else if (current + 1 === index) classNames += ' slide--next'\n          \n      return (\n        <li \n          ref={this.slide}\n          className={classNames} \n          onClick={this.handleSlideClick}\n          onMouseMove={this.handleMouseMove}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          <div className=\"slide__image-wrapper\">\n            <img \n              className=\"slide__image\"\n              alt={headline}\n              src={src}\n              onLoad={this.imageLoaded}\n            />\n          </div>\n          \n  \n        </li>\n      )\n    }\n  }\n  \n  \n  // =========================\n  // Slider control\n  // =========================\n  \n  const SliderControl = ({ type, title, handleClick }) => {\n    return (\n      <button className={`btn btn--${type}`} title={title} onClick={handleClick}>\n        <svg className=\"icon\" viewBox=\"0 0 24 24\">\n          <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\n        </svg>\n      </button>\n    )\n  }\n  \n  \n  // =========================\n  // Slider\n  // =========================\n  \n  class Slider extends React.Component {\n    constructor(props) {\n      super(props)\n      \n      this.state = { current: 0 }\n      this.handlePreviousClick = this.handlePreviousClick.bind(this)\n      this.handleNextClick = this.handleNextClick.bind(this)\n      this.handleSlideClick = this.handleSlideClick.bind(this)\n    }\n    \n    handlePreviousClick() {\n      const previous = this.state.current - 1\n          \n      this.setState({ \n        current: (previous < 0) \n          ? this.props.slides.length - 1\n          : previous\n      })\n    }\n    \n    handleNextClick() {\n      const next = this.state.current + 1;\n      \n      this.setState({ \n        current: (next === this.props.slides.length) \n          ? 0\n          : next\n      })\n    }\n    \n    handleSlideClick(index) {\n      if (this.state.current !== index) {\n        this.setState({\n          current: index\n        })\n      }\n    }\n  \n    render() {\n      const { current, direction } = this.state\n      const { slides, heading } = this.props \n      const headingId = `slider-heading__${heading.replace(/\\s+/g, '-').toLowerCase()}`\n      const wrapperTransform = {\n        'transform': `translateX(-${current * (100 / slides.length)}%)`\n      }\n      \n      return (\n        <div className='slider' aria-labelledby={headingId}>\n          <ul className=\"slider__wrapper\" style={wrapperTransform}>\n            <h3 id={headingId} class=\"visuallyhidden\">{heading}</h3>\n            \n            {slides.map(slide => {\n              return (\n                <Slide\n                  key={slide.index}\n                  slide={slide}\n                  current={current}\n                  handleSlideClick={this.handleSlideClick}\n                />\n              )\n            })}\n          </ul>\n          \n          <div className=\"slider__controls \">\n            <SliderControl \n              type=\"previous\"\n              title=\"Go to previous slide\"\n              handleClick={this.handlePreviousClick}\n            />\n\n            \n            \n            <SliderControl \n              type=\"next\"\n              title=\"Go to next slide\"\n              handleClick={this.handleNextClick}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n\n  export default Slider\n  \n  \n  \n ","import { fragment } from \"../../shaders/paste/fragment\";\nimport { vertex } from \"../../shaders/paste/vertex\";\n\nimport * as THREE from \"three\";\n\nconst shaderMaterial = {\n  uniforms: {\n    time: { type: \"f\", value: 0 },\n\n    resolution: { type: \"v4\", value: new THREE.Vector4() },\n    uvRate1: {\n      value: new THREE.Vector2(1, 1),\n    },\n  },\n  extensions: {\n    derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n  },\n  side: THREE.DoubleSide,\n  transparent: true,\n  blending: THREE.AdditiveBlending,\n  depthWrite: false,\n  depthTest: false,\n  vertexShader: `\n      uniform float time;\n      varying vec2 vUv;\n    \n\n      varying float vProgress;\n      //\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec4 P){\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 / 7.0;\n  vec4 gy00 = floor(gx00) / 7.0;\n  vec4 gz00 = floor(gy00) / 6.0;\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 / 7.0;\n  vec4 gy01 = floor(gx01) / 7.0;\n  vec4 gz01 = floor(gy01) / 6.0;\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 / 7.0;\n  vec4 gy10 = floor(gx10) / 7.0;\n  vec4 gz10 = floor(gy10) / 6.0;\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 / 7.0;\n  vec4 gy11 = floor(gx11) / 7.0;\n  vec4 gz11 = floor(gy11) / 6.0;\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\n\n\n      void main() {\n\n      vec3 newpos = position;\n      newpos.y -= mod(time/5. , 3.);\n      \n      float progress = smoothstep(-1.,4., newpos.y);\n      float progress1 = smoothstep(-1.,8., newpos.y);\n      vProgress = progress;\n      //newpos.z += cnoise(vec4(position,time/1.));\n\n\n      newpos.z += +progress* -newpos.y*newpos.y - newpos.x*newpos.x;\n\n      vec3 noise1 =  1. * (position*vec3(1.,3.,1.) + time*vec3(0.,0.4,0.))*vec3(5.,1.,1.);\n     vec3 noise2 = 1.  * (position + time*vec3(0.,0.6,0.))*vec3(5.,1.,1.);\n\n      newpos.x += 0.4*progress * cnoise(vec4(noise1,time/5.));\n      newpos.yz += 0.7*progress1 * (cnoise(vec4(noise2,time/5.)) + 0.2);\n\n\n      \n       vec4 mvPosition = modelViewMatrix * vec4(newpos,1.);\n       gl_PointSize = 4. * (1. / - mvPosition.z);\n       gl_Position = projectionMatrix * mvPosition;\n      }\n    `,\n  fragmentShader: `\n\n    varying vec2 vUv;\n    uniform float progress;\n    uniform sampler2D texture1;\n    uniform sampler2D texture2;\n    uniform vec4 resolution;\n    varying float vProgress;\n\n    varying vec4 vPosition;\n      void main() {\n        float dist = length(gl_PointCoord - vec2(0.5));\n        float alpha =  1. - smoothstep(0.45,0.5,dist);\n        gl_FragColor = vec4(0.603, 0.564,0.470,alpha*0.5+0.5*vProgress);\n      }\n    `,\n};\n\nexport default shaderMaterial;\n","import React, { useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport gsap from \"gsap\";\nimport { ChromaticAberration, EffectComposer } from \"react-postprocessing\";\nimport { Canvas, extend, useFrame, useThree } from \"react-three-fiber\";\n\n\nimport Paste from \"./components/paste/Paste\";\nvar colors = require(\"nice-color-palettes\");\n\nextend({ OrbitControls });\nlet pallete = colors[96];\nconst CameraControls = () => {\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return <orbitControls ref={controls} args={[camera, domElement]} />;\n};\n\nfunction Scene() {\n  const { viewport, aspect } = useThree();\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Canvas\n        camera={{\n          fov: 75,\n\n          near: 0.001,\n          far: 10000,\n\n          position: [0, 0, 2],\n        }}\n        gl={{\n          antialias: true,\n          // alpha:false,\n          //preserveDrawingBuffer: true,\n        }}\n        onCreated={({ gl, camera }) => {\n          gl.physicallyCorrectLights = true;\n          gl.outputEncoding = THREE.sRGBEncoding;\n         // gl.setClearColor(\"#000\");\n          gl.setClearColor(\"#181819\");\n        }}\n      >\n        <Paste position={[0, 0, 0]} />\n        <CameraControls />\n    \n      </Canvas>\n    </div>\n  );\n}\n\nconst getDevicePixelRatio = (maxDpr = 2) =>\n  typeof window !== \"undefined\"\n    ? Math.min(\n        Math.max(Math.round(window.devicePixelRatio), 1),\n        maxDpr\n      ).toFixed(1)\n    : \"1.0\";\n\nexport default Scene;\n","import React from \"react\";\nimport Scene from \"./Scene\";\nimport { slideData } from \"./slideData\";\nimport \"./styles.scss\";\nimport Slider from \"./Slider\";\nimport Fall from \"./Fall\";\n\nexport default function App() {\n  return (\n\n    <>\n      <div className=\"frame\">\n        <h1 className=\"frame__title\">AUDIO VISUALIZATION</h1>\n        <div className=\"frame__links\"></div>\n        <div className=\"frame__nav\">\n          <a\n            className=\"frame__link\"\n            href=\"https://isengupt.github.io/glass-layer/\"\n          >\n            Previous\n          </a>\n          <a className=\"frame__link\" href=\"#\">\n            Resume\n          </a>\n          <a\n            className=\"frame__link\"\n            href=\"https://github.com/isengupt/audio-visual/\"\n          >\n            GitHub\n          </a>\n        </div>\n      </div>\n      <div className=\"main__container\">\n      <div className=\"layout__container\">\n        <div className=\"player__container border__right \">\n          <div className=\"player__title__container\">\n            <div className=\"player__title border__bottom border__top\">\n              <div className=\"player__title__name\">Sunday</div>\n              <div className=\"player__title__input\">Search</div>\n            </div>\n          </div>\n          <Scene />\n          <div className=\"player__title__container\">\n            <div className=\"player__title border__bottom border__top\">\n              <div className=\"player__title__input\">Previous</div>\n              <div className=\"player__title__name flipped\">28.20.19</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical__container border__right\">\n          <Fall />\n        </div>\n\n        <div className=\"info__container border__right\">\n          <div className=\"info__items\">\n            <div className=\"info__items__gradient\"></div>\n            <div className=\"info__items__content\">\n              <div className=\"info__items__content__title\">\n                Bring back all those <span>colors</span>\n              </div>\n              <div className=\"info__items__content__artist\">Next sisulele</div>\n\n              <div className=\"info__items__content__description\">\n                It is a long established fact that a reader will be distracted\n                by the readable content of a page when looking at its layout.\n                The point of using Lorem Ipsum is that it has a more-or-less\n                normal distribution of letters, as opposed to using 'Content\n                here, content here', making it look like readable English\n              </div>\n\n              <div className=\"info__items__content__lyrics\">\n                <Slider heading=\"Example Slider\" slides={slideData} />\n              </div>\n            </div>\n          </div>\n\n          {/*   */}\n        </div>\n        <div className=\"side__container\">\n          <div className=\"side__items\">\n            <div className=\"side__items__info border__right\">\n              <div className=\"side__items__info__text\">publishing</div>\n            </div>\n            <div className=\"side__items__description\">\n              <div class=\"ticker-wrap border__right\">\n                <div class=\"ticker\">\n                  <div class=\"ticker__item\">Letterpress chambray brunch.</div>\n                  <div class=\"ticker__item\">\n                    Vice mlkshk crucifix beard chillwave meditation hoodie\n                    asymmetrical Helvetica.\n                  </div>\n                  <div class=\"ticker__item\">\n                    Ugh PBR&B kale chips Echo Park.\n                  </div>\n                  <div class=\"ticker__item\">\n                    Gluten-free mumblecore chambray mixtape food truck.{\" \"}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"side__items__info__grad\">\n              <div className=\"gradient__rect\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n   \n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}