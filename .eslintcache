[{"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/index.js":"1","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/reportWebVitals.js":"2","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/App.js":"3","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/Slider.js":"4","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/slideData.js":"5","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/Fall.js":"6","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/Scene.js":"7","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/paste/Paste.js":"8","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/title/Title.js":"9","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/paste/shader.js":"10","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/title/shader.js":"11","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/title/fragment.js":"12","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/title/vertex.js":"13","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/paste/vertex.js":"14","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/paste/fragment.js":"15"},{"size":479,"mtime":1610127510367,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610081295990,"results":"18","hashOfConfig":"17"},{"size":3994,"mtime":1610244053030,"results":"19","hashOfConfig":"17"},{"size":4653,"mtime":1610161088950,"results":"20","hashOfConfig":"17"},{"size":719,"mtime":1610127077463,"results":"21","hashOfConfig":"17"},{"size":1643,"mtime":1610159628496,"results":"22","hashOfConfig":"17"},{"size":1843,"mtime":1610157541816,"results":"23","hashOfConfig":"17"},{"size":1588,"mtime":1610159615928,"results":"24","hashOfConfig":"17"},{"size":5195,"mtime":1610157612041,"results":"25","hashOfConfig":"17"},{"size":7230,"mtime":1610159102264,"results":"26","hashOfConfig":"17"},{"size":1376,"mtime":1610157292226,"results":"27","hashOfConfig":"17"},{"size":6167,"mtime":1610157850336,"results":"28","hashOfConfig":"17"},{"size":166,"mtime":1610081452284,"results":"29","hashOfConfig":"17"},{"size":166,"mtime":1610135644228,"results":"30","hashOfConfig":"17"},{"size":6126,"mtime":1610135644223,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"114jbm0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/index.js",[],["70","71"],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/reportWebVitals.js",[],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/App.js",["72"],"import React from \"react\";\nimport Scene from \"./Scene\";\nimport { slideData } from \"./slideData\";\nimport \"./styles.scss\";\nimport Slider from \"./Slider\";\nimport Fall from \"./Fall\";\n\nexport default function App() {\n  return (\n\n    <>\n      <div className=\"frame\">\n        <h1 className=\"frame__title\">AUDIO VISUALIZATION</h1>\n        <div className=\"frame__links\"></div>\n        <div className=\"frame__nav\">\n          <a\n            className=\"frame__link\"\n            href=\"https://isengupt.github.io/fiber-website/\"\n          >\n            Previous\n          </a>\n          <a className=\"frame__link\" href=\"#\">\n            Resume\n          </a>\n          <a\n            className=\"frame__link\"\n            href=\"https://github.com/isengupt/audio-visual/\"\n          >\n            GitHub\n          </a>\n        </div>\n      </div>\n      <div className=\"main__container\">\n      <div className=\"layout__container\">\n        <div className=\"player__container border__right \">\n          <div className=\"player__title__container\">\n            <div className=\"player__title border__bottom border__top\">\n              <div className=\"player__title__name\">Sunday</div>\n              <div className=\"player__title__input\">Search</div>\n            </div>\n          </div>\n          <Scene />\n          <div className=\"player__title__container\">\n            <div className=\"player__title border__bottom border__top\">\n              <div className=\"player__title__input\">Previous</div>\n              <div className=\"player__title__name flipped\">28.20.19</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"vertical__container border__right\">\n          <Fall />\n        </div>\n\n        <div className=\"info__container border__right\">\n          <div className=\"info__items\">\n            <div className=\"info__items__gradient\"></div>\n            <div className=\"info__items__content\">\n              <div className=\"info__items__content__title\">\n                Bring back all those <span>colors</span>\n              </div>\n              <div className=\"info__items__content__artist\">Next sisulele</div>\n\n              <div className=\"info__items__content__description\">\n                It is a long established fact that a reader will be distracted\n                by the readable content of a page when looking at its layout.\n                The point of using Lorem Ipsum is that it has a more-or-less\n                normal distribution of letters, as opposed to using 'Content\n                here, content here', making it look like readable English\n              </div>\n\n              <div className=\"info__items__content__lyrics\">\n                <Slider heading=\"Example Slider\" slides={slideData} />\n              </div>\n            </div>\n          </div>\n\n          {/*   */}\n        </div>\n        <div className=\"side__container\">\n          <div className=\"side__items\">\n            <div className=\"side__items__info border__right\">\n              <div className=\"side__items__info__text\">publishing</div>\n            </div>\n            <div className=\"side__items__description\">\n              <div class=\"ticker-wrap border__right\">\n                <div class=\"ticker\">\n                  <div class=\"ticker__item\">Letterpress chambray brunch.</div>\n                  <div class=\"ticker__item\">\n                    Vice mlkshk crucifix beard chillwave meditation hoodie\n                    asymmetrical Helvetica.\n                  </div>\n                  <div class=\"ticker__item\">\n                    Ugh PBR&B kale chips Echo Park.\n                  </div>\n                  <div class=\"ticker__item\">\n                    Gluten-free mumblecore chambray mixtape food truck.{\" \"}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"side__items__info__grad\">\n              <div className=\"gradient__rect\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n   \n  );\n}\n","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/Slider.js",["73","74"],"import React from \"react\";\n\nclass Slide extends React.Component {\n    constructor(props) {\n      super(props)\n  \n      this.handleMouseMove = this.handleMouseMove.bind(this)\n      this.handleMouseLeave = this.handleMouseLeave.bind(this)\n      this.handleSlideClick = this.handleSlideClick.bind(this)\n      this.imageLoaded = this.imageLoaded.bind(this)\n      this.slide = React.createRef()\n    }\n    \n    handleMouseMove(event) {\n      const el = this.slide.current\n      const r = el.getBoundingClientRect()\n  \n      el.style.setProperty('--x', event.clientX - (r.left + Math.floor(r.width / 2)))\n      el.style.setProperty('--y', event.clientY - (r.top + Math.floor(r.height / 2)))\n    }\n    \n    handleMouseLeave(event) {    \n      this.slide.current.style.setProperty('--x', 0)\n      this.slide.current.style.setProperty('--y', 0)\n    }\n    \n    handleSlideClick(event) {\n      this.props.handleSlideClick(this.props.slide.index)\n    }\n    \n    imageLoaded(event) {\n      event.target.style.opacity = 1\n    }\n    \n    render() {\n      const { src, button, headline, index } = this.props.slide\n      const current = this.props.current\n      let classNames = 'slide'\n      \n      if (current === index) classNames += ' slide--current'\n      else if (current - 1 === index) classNames += ' slide--previous'\n      else if (current + 1 === index) classNames += ' slide--next'\n          \n      return (\n        <li \n          ref={this.slide}\n          className={classNames} \n          onClick={this.handleSlideClick}\n          onMouseMove={this.handleMouseMove}\n          onMouseLeave={this.handleMouseLeave}\n        >\n          <div className=\"slide__image-wrapper\">\n            <img \n              className=\"slide__image\"\n              alt={headline}\n              src={src}\n              onLoad={this.imageLoaded}\n            />\n          </div>\n          \n  \n        </li>\n      )\n    }\n  }\n  \n  \n  // =========================\n  // Slider control\n  // =========================\n  \n  const SliderControl = ({ type, title, handleClick }) => {\n    return (\n      <button className={`btn btn--${type}`} title={title} onClick={handleClick}>\n        <svg className=\"icon\" viewBox=\"0 0 24 24\">\n          <path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" />\n        </svg>\n      </button>\n    )\n  }\n  \n  \n  // =========================\n  // Slider\n  // =========================\n  \n  class Slider extends React.Component {\n    constructor(props) {\n      super(props)\n      \n      this.state = { current: 0 }\n      this.handlePreviousClick = this.handlePreviousClick.bind(this)\n      this.handleNextClick = this.handleNextClick.bind(this)\n      this.handleSlideClick = this.handleSlideClick.bind(this)\n    }\n    \n    handlePreviousClick() {\n      const previous = this.state.current - 1\n          \n      this.setState({ \n        current: (previous < 0) \n          ? this.props.slides.length - 1\n          : previous\n      })\n    }\n    \n    handleNextClick() {\n      const next = this.state.current + 1;\n      \n      this.setState({ \n        current: (next === this.props.slides.length) \n          ? 0\n          : next\n      })\n    }\n    \n    handleSlideClick(index) {\n      if (this.state.current !== index) {\n        this.setState({\n          current: index\n        })\n      }\n    }\n  \n    render() {\n      const { current, direction } = this.state\n      const { slides, heading } = this.props \n      const headingId = `slider-heading__${heading.replace(/\\s+/g, '-').toLowerCase()}`\n      const wrapperTransform = {\n        'transform': `translateX(-${current * (100 / slides.length)}%)`\n      }\n      \n      return (\n        <div className='slider' aria-labelledby={headingId}>\n          <ul className=\"slider__wrapper\" style={wrapperTransform}>\n            <h3 id={headingId} class=\"visuallyhidden\">{heading}</h3>\n            \n            {slides.map(slide => {\n              return (\n                <Slide\n                  key={slide.index}\n                  slide={slide}\n                  current={current}\n                  handleSlideClick={this.handleSlideClick}\n                />\n              )\n            })}\n          </ul>\n          \n          <div className=\"slider__controls \">\n            <SliderControl \n              type=\"previous\"\n              title=\"Go to previous slide\"\n              handleClick={this.handlePreviousClick}\n            />\n\n            \n            \n            <SliderControl \n              type=\"next\"\n              title=\"Go to next slide\"\n              handleClick={this.handleNextClick}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n\n  export default Slider\n  \n  \n  \n ","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/slideData.js",[],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/Fall.js",["75","76","77","78","79","80","81"],"import React, { useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport gsap from \"gsap\";\nimport { ChromaticAberration, EffectComposer } from \"react-postprocessing\";\nimport { Canvas, extend, useFrame, useThree } from \"react-three-fiber\";\n\n\nimport Paste from \"./components/paste/Paste\";\nvar colors = require(\"nice-color-palettes\");\n\nextend({ OrbitControls });\nlet pallete = colors[96];\nconst CameraControls = () => {\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return <orbitControls ref={controls} args={[camera, domElement]} />;\n};\n\nfunction Scene() {\n  const { viewport, aspect } = useThree();\n  return (\n    <div style={{ height: \"100%\" }}>\n      <Canvas\n        camera={{\n          fov: 75,\n\n          near: 0.001,\n          far: 10000,\n\n          position: [0, 0, 2],\n        }}\n        gl={{\n          antialias: true,\n          // alpha:false,\n          //preserveDrawingBuffer: true,\n        }}\n        onCreated={({ gl, camera }) => {\n          gl.physicallyCorrectLights = true;\n          gl.outputEncoding = THREE.sRGBEncoding;\n         // gl.setClearColor(\"#000\");\n          gl.setClearColor(\"#181819\");\n        }}\n      >\n        <Paste position={[0, 0, 0]} />\n        <CameraControls />\n    \n      </Canvas>\n    </div>\n  );\n}\n\nconst getDevicePixelRatio = (maxDpr = 2) =>\n  typeof window !== \"undefined\"\n    ? Math.min(\n        Math.max(Math.round(window.devicePixelRatio), 1),\n        maxDpr\n      ).toFixed(1)\n    : \"1.0\";\n\nexport default Scene;\n","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/Scene.js",["82","83","84","85","86","87","88"],"import React, { useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport gsap from \"gsap\";\nimport { ChromaticAberration, EffectComposer } from \"react-postprocessing\";\nimport { Canvas, extend, useFrame, useThree } from \"react-three-fiber\";\n\n\nimport Title from \"./components/title/Title\";\nvar colors = require(\"nice-color-palettes\");\n\nextend({ OrbitControls });\nlet pallete = colors[96];\nconst CameraControls = () => {\n  const {\n    camera,\n    gl: { domElement },\n  } = useThree();\n\n  const controls = useRef();\n  useFrame((state) => controls.current.update());\n  return <orbitControls ref={controls} args={[camera, domElement]} />;\n};\n\nfunction Scene() {\n  const { viewport, aspect } = useThree();\n  return (\n    <div style={{ height: \"300px\", width: \"300px\" }}>\n      <Canvas\n        camera={{\n          fov: 10,\n\n          near: 0.001,\n          far: 10000,\n\n          position: [0, 0, 15],\n        }}\n        gl={{\n          antialias: true,\n          // alpha:false,\n          //preserveDrawingBuffer: true,\n        }}\n        onCreated={({ gl, camera }) => {\n          gl.physicallyCorrectLights = true;\n          gl.outputEncoding = THREE.sRGBEncoding;\n         // gl.setClearColor(\"#000\");\n          gl.setClearColor(\"#181819\");\n        }}\n      >\n        <Title position={[0, 0, 0]} />\n        <CameraControls />\n        {/*   <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <EffectComposer>\n        <ChromaticAberration offset={[-0.001,0.008]}/> \n      </EffectComposer> */}\n      </Canvas>\n    </div>\n  );\n}\n\nconst getDevicePixelRatio = (maxDpr = 2) =>\n  typeof window !== \"undefined\"\n    ? Math.min(\n        Math.max(Math.round(window.devicePixelRatio), 1),\n        maxDpr\n      ).toFixed(1)\n    : \"1.0\";\n\nexport default Scene;\n","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/paste/Paste.js",["89"],"import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport shaderMaterial from \"./shader\";\n\nlet count = 500;\n\nlet position = new Float32Array(count * count * 3);\n\nfor (let i = 0; i < count; i++) {\n  for (let j = 0; j < count; j++) {\n   /*   let u = Math.random() * 2 * Math.PI;\n    let v = Math.random() * Math.PI;\n    let x = 6 * (0.9 + 0.2 * v) * Math.cos(u) * Math.sin(v);\n    let y = 6 * 1.5 * Math.cos(v);\n    let z = 6 * (0.9 + 0.2 * v) * Math.sin(u) * Math.sin(v);\n    \n    position.set([x, y, z], 3 * (count * i + j));\n    */\n     position.set([\n      (i/count - 0.5)*10,\n      (j/count - 0.5)*10,\n      0\n    ],3*(count*i+j)) \n    \n  }\n}\n\nfunction Paste(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(({ clock }) => {\n    mesh.current.material.uniforms.time.value = clock.elapsedTime;\n  });\n\n  const radiansX = 0 * Math.PI / 2;\n  const radiansY = (180 * Math.PI) / 180;\n  const radiansZ = (20 * Math.PI) / 180;\n\n  return (\n    <points {...props} ref={mesh}\n      rotation={[radiansX, radiansY, radiansZ]}\n    >\n      <bufferGeometry attach=\"geometry\"\n        rotation={[radiansX, radiansY, radiansZ]}\n      \n      >\n        <bufferAttribute\n          attachObject={[\"attributes\", \"position\"]}\n          args={[position, 3]}\n        />\n      </bufferGeometry>\n      <shaderMaterial attach=\"material\" \n       \n      args={[shaderMaterial]} />\n    </points>\n  );\n}\n\nexport default Paste;\n","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/title/Title.js",["90"],"import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport * as THREE from \"three\";\nimport shaderMaterial from \"./shader\";\nimport { fragment } from \"../../shaders/title/fragment\";\nimport { vertex } from \"../../shaders/title/vertex\";\nimport img1 from '../../img/img1.jpg'\nlet nums = 20;\nlet mat1s = [];\nlet mat0s = [];\n\nfor (var i = 0; i <= nums; i++) {\n  let level = i / nums;\n  console.log(level);\n  let m0 = Object.assign({}, shaderMaterial);\n  let m1 = Object.assign({}, shaderMaterial);\n  m0.uniforms.black.value = 1;\n  m1.uniforms.black.value = 0;\n  m0.uniforms.level.value = level;\n  m1.uniforms.level.value = level;\n\n  mat1s.push(m1);\n  mat0s.push(m0);\n}\n\nfunction Title(props) {\n  // This reference will give us direct access to the mesh\n  let mesh0Ref = useRef({});\n  let mesh1Ref = useRef({});\n  let planeRef = useRef();\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  const radiansX = Math.PI / 2;\n  const radiansY = (0 * Math.PI) / 180;\n  const radiansZ = (0 * Math.PI) / 180;\n\n  useFrame(({ clock }) => {\n    //mesh0Ref.current.material.uniforms.time.value = clock.elapsedTime;\n\n    Array.from(new Array(20)).map((_, i) => {\n      mesh0Ref.current[i].material.uniforms.time.value = clock.elapsedTime;\n      mesh1Ref.current[i].material.uniforms.time.value = clock.elapsedTime;\n    });\n  });\n\n  return (\n    <>\n      <group {...props}\n        rotation={[radiansX, radiansY, radiansZ]}\n        scale={[2,2,2]}\n       >\n        {Array.from(new Array(20)).map((_, i) => (\n          <mesh\n            transparent={true}\n            ref={(ref) => (mesh0Ref.current[i] = ref)}\n            rotation={[radiansX, radiansY, radiansZ]}\n            key={i}\n            position={[0, i / nums, 0]}\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]}>\n              {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n            </planeBufferGeometry>\n            <shaderMaterial\n              attach=\"material\"\n              transparent={true}\n              wireframe={false}\n              args={[\n                {\n                  uniforms: {\n                    time: { type: \"f\", value: 0 },\n                    resolution: { type: \"v4\", value: new THREE.Vector4() },\n                    uvRate1: {\n                      value: new THREE.Vector2(1, 1),\n                    },\n                    level: {\n                      type: \"f\",\n                      value: i / nums,\n                    },\n                    image: { type: \"t\", value: new THREE.TextureLoader().load(img1) },\n                    playhead: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                    black: {\n                      type: \"f\",\n                      value: 1,\n                    },\n                  },\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  vertexShader: vertex,\n                  fragmentShader: fragment,\n                },\n              ]}\n            />\n          </mesh>\n        ))}\n\n        {Array.from(new Array(20)).map((_, i) => (\n          <mesh\n            transparent={true}\n            ref={(ref) => (mesh1Ref.current[i] = ref)}\n            rotation={[radiansX, radiansY, radiansZ]}\n            key={i}\n            position={[0, i / nums - 0.005, 0]}\n          >\n            <planeBufferGeometry attach=\"geometry\" args={[1, 1]}>\n              {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n            </planeBufferGeometry>\n            <shaderMaterial\n              attach=\"material\"\n              transparent={true}\n              wireframe={false}\n              args={[\n                {\n                  uniforms: {\n                    time: { type: \"f\", value: 0 },\n                    resolution: { type: \"v4\", value: new THREE.Vector4() },\n                    uvRate1: {\n                      value: new THREE.Vector2(1, 1),\n                    },\n                    level: {\n                      type: \"f\",\n                      value: i / nums,\n                    },\n                    image: { type: \"t\", value: new THREE.TextureLoader().load(img1) },\n                    playhead: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                    black: {\n                      type: \"f\",\n                      value: 0,\n                    },\n                  },\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  vertexShader: vertex,\n                  fragmentShader: fragment,\n                },\n              ]}\n            />\n          </mesh>\n        ))}\n\n        <mesh ref={planeRef}\n       \n                  rotation={[radiansX, radiansY, radiansZ]}\n        \n         >\n          <planeBufferGeometry attach=\"geometry\" args={[6, 6]}>\n            {/* <bufferAttribute attachObject={['attributes', 'count']} args={[count, 1]} /> */}\n          </planeBufferGeometry>\n          <shaderMaterial attach=\"material\" args={[shaderMaterial]} />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nexport default Title;\n","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/paste/shader.js",["91","92"],"import { fragment } from \"../../shaders/paste/fragment\";\nimport { vertex } from \"../../shaders/paste/vertex\";\n\nimport * as THREE from \"three\";\n\nconst shaderMaterial = {\n  uniforms: {\n    time: { type: \"f\", value: 0 },\n\n    resolution: { type: \"v4\", value: new THREE.Vector4() },\n    uvRate1: {\n      value: new THREE.Vector2(1, 1),\n    },\n  },\n  extensions: {\n    derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n  },\n  side: THREE.DoubleSide,\n  transparent: true,\n  blending: THREE.AdditiveBlending,\n  depthWrite: false,\n  depthTest: false,\n  vertexShader: `\n      uniform float time;\n      varying vec2 vUv;\n    \n\n      varying float vProgress;\n      //\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec4 P){\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 / 7.0;\n  vec4 gy00 = floor(gx00) / 7.0;\n  vec4 gz00 = floor(gy00) / 6.0;\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 / 7.0;\n  vec4 gy01 = floor(gx01) / 7.0;\n  vec4 gz01 = floor(gy01) / 6.0;\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 / 7.0;\n  vec4 gy10 = floor(gx10) / 7.0;\n  vec4 gz10 = floor(gy10) / 6.0;\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 / 7.0;\n  vec4 gy11 = floor(gx11) / 7.0;\n  vec4 gz11 = floor(gy11) / 6.0;\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\n\n\n      void main() {\n\n      vec3 newpos = position;\n      newpos.y -= mod(time/5. , 3.);\n      \n      float progress = smoothstep(-1.,4., newpos.y);\n      float progress1 = smoothstep(-1.,8., newpos.y);\n      vProgress = progress;\n      //newpos.z += cnoise(vec4(position,time/1.));\n\n\n      newpos.z += +progress* -newpos.y*newpos.y - newpos.x*newpos.x;\n\n      vec3 noise1 =  1. * (position*vec3(1.,3.,1.) + time*vec3(0.,0.4,0.))*vec3(5.,1.,1.);\n     vec3 noise2 = 1.  * (position + time*vec3(0.,0.6,0.))*vec3(5.,1.,1.);\n\n      newpos.x += 0.4*progress * cnoise(vec4(noise1,time/5.));\n      newpos.yz += 0.7*progress1 * (cnoise(vec4(noise2,time/5.)) + 0.2);\n\n\n      \n       vec4 mvPosition = modelViewMatrix * vec4(newpos,1.);\n       gl_PointSize = 4. * (1. / - mvPosition.z);\n       gl_Position = projectionMatrix * mvPosition;\n      }\n    `,\n  fragmentShader: `\n\n    varying vec2 vUv;\n    uniform float progress;\n    uniform sampler2D texture1;\n    uniform sampler2D texture2;\n    uniform vec4 resolution;\n    varying float vProgress;\n\n    varying vec4 vPosition;\n      void main() {\n        float dist = length(gl_PointCoord - vec2(0.5));\n        float alpha =  1. - smoothstep(0.45,0.5,dist);\n        gl_FragColor = vec4(0.603, 0.564,0.470,alpha*0.5+0.5*vProgress);\n      }\n    `,\n};\n\nexport default shaderMaterial;\n","/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/components/title/shader.js",[],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/title/fragment.js",[],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/title/vertex.js",[],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/paste/vertex.js",[],"/Users/ishansengupta/Desktop/front-end/audio-vis/audio-vis/src/shaders/paste/fragment.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":22,"column":11,"nodeType":"99","endLine":22,"endColumn":47},{"ruleId":"100","severity":1,"message":"101","line":36,"column":20,"nodeType":"102","messageId":"103","endLine":36,"endColumn":26},{"ruleId":"100","severity":1,"message":"104","line":126,"column":24,"nodeType":"102","messageId":"103","endLine":126,"endColumn":33},{"ruleId":"100","severity":1,"message":"105","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":12},{"ruleId":"100","severity":1,"message":"106","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":29},{"ruleId":"100","severity":1,"message":"107","line":5,"column":31,"nodeType":"102","messageId":"103","endLine":5,"endColumn":45},{"ruleId":"100","severity":1,"message":"108","line":13,"column":5,"nodeType":"102","messageId":"103","endLine":13,"endColumn":12},{"ruleId":"100","severity":1,"message":"109","line":26,"column":11,"nodeType":"102","messageId":"103","endLine":26,"endColumn":19},{"ruleId":"100","severity":1,"message":"110","line":26,"column":21,"nodeType":"102","messageId":"103","endLine":26,"endColumn":27},{"ruleId":"100","severity":1,"message":"111","line":58,"column":7,"nodeType":"102","messageId":"103","endLine":58,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":12},{"ruleId":"100","severity":1,"message":"106","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":29},{"ruleId":"100","severity":1,"message":"107","line":5,"column":31,"nodeType":"102","messageId":"103","endLine":5,"endColumn":45},{"ruleId":"100","severity":1,"message":"108","line":13,"column":5,"nodeType":"102","messageId":"103","endLine":13,"endColumn":12},{"ruleId":"100","severity":1,"message":"109","line":26,"column":11,"nodeType":"102","messageId":"103","endLine":26,"endColumn":19},{"ruleId":"100","severity":1,"message":"110","line":26,"column":21,"nodeType":"102","messageId":"103","endLine":26,"endColumn":27},{"ruleId":"100","severity":1,"message":"111","line":62,"column":7,"nodeType":"102","messageId":"103","endLine":62,"endColumn":26},{"ruleId":"100","severity":1,"message":"112","line":3,"column":13,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":40,"column":42,"nodeType":"115","messageId":"116","endLine":40,"endColumn":44},{"ruleId":"100","severity":1,"message":"117","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":18},{"ruleId":"100","severity":1,"message":"118","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'button' is assigned a value but never used.","Identifier","unusedVar","'direction' is assigned a value but never used.","'gsap' is defined but never used.","'ChromaticAberration' is defined but never used.","'EffectComposer' is defined but never used.","'pallete' is assigned a value but never used.","'viewport' is assigned a value but never used.","'aspect' is assigned a value but never used.","'getDevicePixelRatio' is assigned a value but never used.","'THREE' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'fragment' is defined but never used.","'vertex' is defined but never used.","no-global-assign","no-unsafe-negation"]